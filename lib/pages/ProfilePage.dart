import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tcs_demo/components/CustomIconButton.dart';import 'package:tcs_demo/pages/BioMetricPage.dart';import 'package:tcs_demo/pages/EmployeeProfilePage.dart';import 'package:tcs_demo/pages/LoginPage.dart';import 'package:tcs_demo/utils/PreferenceManager.dart';import '../responseModels/EmployeeDetailResponse.dart';import '../utils/Dialog.dart';import '../viewModels/AuthViewModel.dart';class ProfilePage extends StatelessWidget {  const ProfilePage({super.key});  @override  Widget build(BuildContext context) {    final authViewModel = Get.put(AuthViewModel());    final employeeData = authViewModel.employeeDetailResponseState.value        .whenOrNull(success: (data) => data as EmployeeDetailResponse?)        ?.employeeDetails;    final preferenceManager = Get.put(PreferenceManager());    return SafeArea(        top: true,        child: Scaffold(          appBar: AppBar(            title: const Text(              "Profile",              style:                  TextStyle(fontWeight: FontWeight.bold, color: Colors.white),            ),            backgroundColor: Colors.blue, // Customize the background color            elevation: 4, // Adds a shadow effect            iconTheme: const IconThemeData(color: Colors.white),          ),          body: SizedBox(            child: Padding(              padding:                  const EdgeInsets.symmetric(horizontal: 20.0, vertical: 20),              child: Column(                children: [                  Container(                    decoration: const BoxDecoration(                        color: Colors.white,                        borderRadius: BorderRadius.all(Radius.circular(20))),                    width: double.infinity,                    child: Column(                      children: [                        const SizedBox(height: 20),                        Text(                          employeeData?.loginId ?? "",                          style: const TextStyle(                              fontSize: 18,                              color: Colors.blue,                              fontWeight: FontWeight.bold),                        ),                        Text(                          employeeData?.employeeName ?? "",                          style: const TextStyle(                              fontSize: 14,                              color: Colors.blue,                              fontWeight: FontWeight.bold),                        ),                        Text(                          employeeData?.designation ?? "",                          style: const TextStyle(                              fontSize: 14,                              color: Colors.blue,                              fontWeight: FontWeight.bold),                        ),                        const SizedBox(height: 16),                      ],                    ),                  ),                  Column(                    children: [                      const SizedBox(height: 20),                      CustomIconButton(                          text: 'Employee Profile',                          icon:                              const Icon(Icons.supervised_user_circle_rounded),                          backgroundColor: Colors.blue,                          onClick: () {                            Get.to(() => const EmployeeProfilePage());                          }),                      const SizedBox(height: 16),                      CustomIconButton(                          text: 'Change MPin',                          icon: const Icon(Icons.pin),                          backgroundColor: Colors.pinkAccent,                          onClick: () => authViewModel.fetchEmployeeDetails(                              employeeData?.loginId ?? "",                              forceMPin: true)),                      const SizedBox(height: 16),                      CustomIconButton(                          text: 'BioMetric',                          icon: const Icon(Icons.fingerprint),                          backgroundColor: Colors.green,                          onClick: () {                            Get.to(const BioMetricPage());                          }),                      const SizedBox(height: 16),                      CustomIconButton(                        text: 'Logout',                        icon: const Icon(Icons.logout),                        backgroundColor: Colors.orange,                        onClick: () async {                          bool? confirmed = await showCustomDialog(context,                              "Confirm", "Are You Sure You want to Logout?");                          if (confirmed == true) {                            preferenceManager.clearAll();                            Get.offAll(() => const LoginPage());                          }                        },                      )                    ],                  )                ],              ),            ),          ),        ));  }}