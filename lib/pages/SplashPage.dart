import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tcs_demo/pages/LoginPage.dart';import 'package:tcs_demo/pages/MPinPage.dart';import 'package:tcs_demo/utils/PreferenceManager.dart';import '../viewModels/AuthViewModel.dart';class SplashPage extends StatefulWidget {  const SplashPage({super.key});  @override  State<SplashPage> createState() => _SplashPageState();}class _SplashPageState extends State<SplashPage> {  final preferenceManager = Get.put(PreferenceManager());  final authViewModel = Get.put(AuthViewModel());  @override  void initState() {    super.initState();    _initializeApp();  }  Future<void> _initializeApp() async {    await Future.delayed(const Duration(seconds: 2));    const String currentAppVersion = "2";    final versionResponse = await authViewModel.checkVersion(currentAppVersion);    print("status: ${versionResponse?.status}");    print("remarks: ${versionResponse?.remarks}");    if (versionResponse == null || versionResponse.status != true) {      Get.defaultDialog(        title: "Update Required",        middleText: versionResponse?.remarks ?? "App version is not supported.",        textConfirm: "OK",        onConfirm: () {          Get.back();        },      );      return;    }    final employeeId = await preferenceManager.getValue(preferenceManager.loginId) ?? "";    if    //(employeeId.isEmpty)    ((employeeId.length ?? 0) < 1)    {      Get.offAll(() => const LoginPage());    } else {      Get.offAll(() => const MPinPage());    }  }  // Future.delayed(const Duration(seconds: 2), () async {  // final employeeId = await preferenceManager.getValue(preferenceManager.employeeId) ?? "";  // if ((employeeId.length ?? 0) < 1) {  // Get.offAll(() => const LoginPage());  // } else {  // Get.offAll(() => const MPinPage());  // }  // });  @override  Widget build(BuildContext context) {    return SafeArea(      top: true,      child: Scaffold(        body: Image.asset(          'assets/images/newSplash.jpeg',          opacity: const AlwaysStoppedAnimation(0.5),          fit: BoxFit.cover,          height: double.infinity,        ),      ),    );  }}