import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tcs_demo/pages/ViolationDashboardPage.dart';import 'package:tcs_demo/responseModels/ReportResponse.dart';import 'package:tcs_demo/utils/PreferenceManager.dart';import 'package:tcs_demo/viewModels/ReportViewModel.dart';class WingDashboardPage extends StatefulWidget {  final String requestFlag;  const WingDashboardPage({    super.key,    required this.requestFlag,  });  @override  State<WingDashboardPage> createState() => _WingDashboardPageState();}class _WingDashboardPageState extends State<WingDashboardPage> {  final preferenceManager = Get.put(PreferenceManager());  final reportViewModel = Get.put(ReportViewModel());  @override  void initState() {    super.initState();    fetchWingCount();  }  void fetchWingCount() async {    final loginId = await preferenceManager.getValue(preferenceManager.loginId);    reportViewModel.fetchWingWiseCount(loginId, widget.requestFlag);  }  @override  Widget build(BuildContext context) {    return Scaffold(      resizeToAvoidBottomInset: false,      appBar: AppBar(        backgroundColor: Colors.blueAccent,        title: const Text(          'Wing Wise Report',          style: TextStyle(              color: Colors.white, fontWeight: FontWeight.w600, fontSize: 16),        ),        leading: IconButton(          icon: const Icon(Icons.arrow_back, color: Colors.white),          onPressed: () => Navigator.pop(context),        ),      ),      body: Obx(() {        final state = reportViewModel.wingWiseCountState.value;        return Padding(          padding: const EdgeInsets.all(12),          child: Column(            children: [              Container(                decoration: BoxDecoration(                  color: Colors.blue,                  borderRadius: BorderRadius.circular(8),                ),                child: Column(                  children: [                    const SizedBox(height: 10),                    const Text(                      "Dashboard",                      style: TextStyle(                          color: Colors.white,                          fontWeight: FontWeight.w600,                          fontSize: 18),                    ),                    Container(                      margin: const EdgeInsets.all(4),                      color: Colors.white,                      child: state.when(                        loading: () => const Center(child: CircularProgressIndicator()),                        error: (msg) => Center(child: Text("Error: $msg")),                        success: (data) {                          final response = data as WingDashboardResponse;                          final dashboardCounts = response.dashboardCounts ?? [];                          if (dashboardCounts.isEmpty) {                            return const Center(child: Text("No Data Found"));                          }                          return ListView.builder(                            shrinkWrap: true,                            itemCount: dashboardCounts.length,                            itemBuilder: (context, index) {                              final item = dashboardCounts[index];                              return InkWell(                                onTap: () {                                  Get.to(() => ViolationDashboardPage(                                    wingData: item ?? const WingDashboardCount(),                                    requestFlag: widget.requestFlag,                                  ));                                },                                child: Column(                                  children: [                                    Padding(                                      padding: const EdgeInsets.all(10.0),                                      child: Row(                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,                                        children: [                                          Expanded(                                            flex: 12,                                            child: Text(                                              item?.wingName ?? "",                                              style: const TextStyle(fontWeight: FontWeight.bold),                                            ),                                          ),                                          Expanded(                                            flex: 2,                                            child: Text(                                              getChallanCount(item),                                              style: const TextStyle(fontWeight: FontWeight.bold),                                            ),                                          ),                                          const Expanded(                                            flex: 2,                                            child: Icon(Icons.arrow_right_alt_rounded),                                          ),                                        ],                                      ),                                    ),                                    Container(                                      height: 1,                                      width: double.infinity,                                      color: Colors.black54,                                    ),                                  ],                                ),                              );                            },                          );                        }, init: () {  },                      ),                    )                  ],                ),              )            ],          ),        );      }),    );  }  // challan count Flag  String getChallanCount(WingDashboardCount? item) {    switch (widget.requestFlag) {      case '1':        return item?.totalChallans ?? '0';      case '2':        return item?.pendingChallans ?? '0';      case '3':        return item?.paidChallans ?? '0';      default:        return '0';    }  }}