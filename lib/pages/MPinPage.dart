import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:pin_code_fields/pin_code_fields.dart';import 'package:tcs_demo/pages/LoginPage.dart';import 'package:tcs_demo/utils/PreferenceManager.dart';import 'package:tcs_demo/viewModels/AuthViewModel.dart';import '../responseModels/EmployeeDetailResponse.dart';class MPinPage extends StatefulWidget {  const MPinPage({    super.key,  });  @override  State<MPinPage> createState() => _MPinPageState();}class _MPinPageState extends State<MPinPage> {  final TextEditingController _controller = TextEditingController();  final authViewModel = Get.put(AuthViewModel());  final preferenceManager = Get.put(PreferenceManager());  EmployeeDetails employeeData = const EmployeeDetails();  void fetchEmployeeData()  async {    final name = await preferenceManager.getValue(preferenceManager.employeeName);    final id = await preferenceManager.getValue(preferenceManager.loginId);    setState(() {      employeeData = EmployeeDetails(loginId: id, employeeName: name);    });  }  @override  void initState() {    super.initState();    fetchEmployeeData();  }  @override  Widget build(BuildContext context) {    return SafeArea(        top: true,        child: Scaffold(          resizeToAvoidBottomInset: false,          body: Stack(            children: [              Container(                decoration: const BoxDecoration(                  image: DecorationImage(                    image: AssetImage('assets/images/ccms_bg.png'),                    fit: BoxFit.fill,                  ),                ),              ),              Obx(() {                final error = (authViewModel.verifyMPinState.value                        .whenOrNull(error: (err) => err) ??                    '');                final isLoading = (authViewModel.verifyMPinState.value                        .whenOrNull(loading: () => true) ??                    false);                return Align(                  alignment: Alignment.center,                  child: Padding(                    padding: const EdgeInsets.symmetric(                      horizontal: 20,                    ),                    child: Container(                      width: 300,                      decoration: BoxDecoration(                        color: Colors.white,                        borderRadius: BorderRadius.circular(12),                        // Rounded corners                        boxShadow: [                          BoxShadow(                            color: Colors.black.withOpacity(0.2),                            // Shadow color                            blurRadius: 10,                            // Spread of blur                            spreadRadius: 2,                            // How much the shadow expands                            offset:                                Offset(3, 5), // X & Y position of the shadow                          ),                        ],                      ),                      child: Padding(                        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 40),                        child: Column(                          mainAxisSize: MainAxisSize.min,                          mainAxisAlignment: MainAxisAlignment.center,                          children: [                            Text(                              employeeData?.loginId ?? "",                              style: const TextStyle(                                  color: Colors.blue,                                  fontWeight: FontWeight.bold),                            ),                            Text(                              employeeData?.employeeName ?? "",                              style: const TextStyle(                                  color: Colors.blue,                                  fontWeight: FontWeight.bold),                            ),                            SizedBox(height: 8),                            const Text(                              'Enter M-Pin',                              style: TextStyle(                                  color: Colors.black54,                                  fontWeight: FontWeight.bold),                            ),                            const SizedBox(                              height: 14,                            ),                            SizedBox(                                width: 200,                                child: PinCodeTextField(                                  controller: _controller,                                  keyboardType: TextInputType.number,                                  length: 4,                                  appContext: context,                                  pinTheme: PinTheme(                                      fieldHeight: 42,                                      shape: PinCodeFieldShape.box,                                      activeColor: Colors.blue,                                      inactiveColor: Colors.grey),                                )),                            Visibility(                                visible: error.isNotEmpty,                                child: Text(                                  error,                                  style: const TextStyle(color: Colors.red),                                )),                            !isLoading                                ? SizedBox(                                    width: 200,                                    child: FilledButton(                                        // onPressed: () {                                        //   FocusScope.of(context).unfocus();                                        //   authViewModel                                        //       .verifyMPin(_controller.text);                                        // },                                        onPressed: () async {                                          FocusScope.of(context).unfocus();                                          // Checking  Version check  Before Proceeding Dashboard                                          // final isVersionValid = await authViewModel.checkVersion();                                          // if (!isVersionValid) {                                          //   const String version = String.fromEnvironment('VERSION', defaultValue: '1.0.0');                                          //   print("App Version: $version");                                          //   return; // Stop execution if version check fails                                          // }                                          // else{                                            authViewModel.verifyMPin(_controller.text);                                          //}                                          // MPIN Verification                                          //authViewModel.verifyMPin(_controller.text);                                        },                                        style: FilledButton.styleFrom(                                          backgroundColor: Colors.blue,                                          shape: RoundedRectangleBorder(                                            borderRadius: BorderRadius.circular(                                                8), // Set the border radius here (smaller value)                                          ),                                          padding: const EdgeInsets.symmetric(                                              vertical:                                                  8), // Adjust padding for height                                        ),                                        child: const SizedBox(                                            width: double.infinity,                                            child: Text(                                              'Submit',                                              textAlign: TextAlign.center,                                            ))),                                  )                                : const CircularProgressIndicator(                                    color: Colors.blueAccent,                                  ),                            SizedBox(height: 12),                            Row(                              mainAxisSize: MainAxisSize.max,                              mainAxisAlignment: MainAxisAlignment.spaceBetween,                              children: [                                GestureDetector(                                  onTap: ()=>Get.offAll(()=> const LoginPage()),                                  child:  const Text(                                    "Change User",                                    style: TextStyle(                                      decoration: TextDecoration.underline,                                      color: Colors.blue,                                      fontWeight: FontWeight.w600,                                      fontSize: 14                                    ),                                  ),                                ),                               GestureDetector(                                 onTap: (){                                   authViewModel.fetchEmployeeDetails(employeeData?.loginId ?? "", forceMPin: true);                                 },                                 child: const Text(                                    "Forgot MPin?",                                    style: TextStyle(                                      color: Colors.blue,                                      decoration: TextDecoration.underline,                                        fontWeight: FontWeight.w600,                                        fontSize: 14                                    ),                                  ),                               )                              ],                            )                          ],                        ),                      ),                    ),                  ),                );              })            ],          ),        ));  }}