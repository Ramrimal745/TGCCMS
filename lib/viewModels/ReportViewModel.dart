import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tcs_demo/extensions/snackBarExtension.dart';import 'package:tcs_demo/requestModels/EmployeeDetailRequest.dart';import 'package:tcs_demo/requestModels/ReportRequest.dart';import 'package:tcs_demo/responseModels/ReportResponse.dart';import '../api/ApiProvider.dart';import '../api/ApiResult.dart';import '../api/EndPoints.dart';import '../requestModels/ChallanRequest.dart';import '../responseModels/ChallanResponse.dart';class ReportViewModel extends GetxController {  final apiProvider = Get.put(ApiProvider());  final dashboardCountState = const ApiResult<DashBoardCountResponse>.init().obs;  final wingWiseCountState = const ApiResult<WingDashboardResponse>.init().obs;  final violationWiseCountState = const ApiResult<ViolationDashboardResponse>.init().obs;  final challanReportResponseState = const ApiResult<ChallanReportResponse>.init().obs;  final challanTempReportResponse = const ApiResult<ChallanTempReportResponse>.init().obs;  Future<void> fetchDashboardCount(String loginId) async {    try {      dashboardCountState.value = const ApiResult.loading();      final response = await apiProvider.post(EndPoints.dashboardCounts,          EmployeeDetailRequest(loginId: loginId).toJson());      final responseData = DashBoardCountResponse.fromJson(response.body);      dashboardCountState.value = ApiResult.success(responseData);    } catch (e) {      dashboardCountState.value =          ApiResult.error("$e");      Get.showSnackBar(message: e.toString(), backgroundColor: Colors.red);    }  }  Future<void> fetchWingWiseCount(String loginId, String requestFlag) async {    try {      wingWiseCountState.value = const ApiResult.loading();      final response = await apiProvider.post(        EndPoints.wingWiseCount,        ReportRequest(          loginId: loginId,          wingId: '',   // as per your request          requestFlag: requestFlag,        ).toJson(),      );      final responseData = WingDashboardResponse.fromJson(response.body);      wingWiseCountState.value = ApiResult.success(responseData);    } catch (e) {      wingWiseCountState.value = ApiResult.error("$e");      Get.showSnackbar(GetSnackBar(message: e.toString(), backgroundColor: Colors.red));    }  }  Future<void> fetchViolationWiseCount(ReportRequest request) async {    try {      violationWiseCountState.value = const ApiResult.loading();      final response = await apiProvider.post(EndPoints.violationWiseDashboardCounts,          request.toJson());      final responseData = ViolationDashboardResponse.fromJson(response.body);      violationWiseCountState.value = ApiResult.success(responseData);    } catch (e) {      violationWiseCountState.value =        ApiResult.error("$e");      Get.showSnackBar(message: e.toString(), backgroundColor: Colors.red);    }  }  Future<void> fetchChallanReport(ChallanReportRequest request) async {    try {      challanReportResponseState.value = const ApiResult.loading();      final response =      await apiProvider.post(EndPoints.getChallanReport, request.toJson());      final responseData = ChallanReportResponse.fromJson(response.body);      if (responseData.status != true) {        throw responseData.remarks ?? "Unable to Get Wings";      }      challanReportResponseState.value = ApiResult.success(responseData);    } catch (e) {      Get.showSnackBar(message: 'Failed $e');      challanReportResponseState.value =      const ApiResult.error("Unable to Get Employee Details");    }  }  Future<void> fetchChallanTempReport(ChallanReportRequest request) async {    try {      challanTempReportResponse.value = const ApiResult.loading();      final response =      await apiProvider.post(EndPoints.getchallansfromtemp, request.toJson());      final responseData = ChallanTempReportResponse.fromJson(response.body);      if (responseData.status != true) {        throw responseData.remarks ?? "Unable to Get Wings";      }      challanTempReportResponse.value = ApiResult.success(responseData);    } catch (e) {      Get.showSnackBar(message: 'Failed $e');      challanTempReportResponse.value =      const ApiResult.error("Unable to Get Employee Details");    }  }}