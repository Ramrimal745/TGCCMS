import 'package:geocoding/geocoding.dart';import 'package:geolocator/geolocator.dart';import 'package:get/get.dart';class LocationViewModel extends GetxController {  Future<Map<String, dynamic>?> getCurrentLocation() async {    print("TRYING TO GET LOCATION");    try {      // Check permissions and get current location      await Geolocator.requestPermission();      LocationPermission locationPermission =      await Geolocator.checkPermission();      if (locationPermission == LocationPermission.denied) return  null;      Position position = await Geolocator.getCurrentPosition(        desiredAccuracy: LocationAccuracy.high,      );      final currentAddress =          await _getAddressFromLatLng(position.latitude, position.longitude);      return {        'lat': position.latitude,        'long': position.longitude,        'address': currentAddress      };    } catch (e) {      print("Error getting location: $e");      return {};    }  }  Future<String?> _getAddressFromLatLng(double lat, double lng) async {    try {      List<Placemark> placemarks = await placemarkFromCoordinates(lat, lng);      if (placemarks.isNotEmpty) {        Placemark place = placemarks.first;        final currentAddress =            "${place.street}, ${place.locality}, ${place.administrativeArea}, ${place.country}";        return currentAddress;      }    } catch (e) {      print("Error getting address: $e");      return null;    }  }} // gettting address