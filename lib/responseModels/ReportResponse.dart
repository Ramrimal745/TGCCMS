import 'package:freezed_annotation/freezed_annotation.dart';part 'ReportResponse.freezed.dart';part 'ReportResponse.g.dart';@Freezed()class DashBoardCountResponse with _$DashBoardCountResponse {  const factory DashBoardCountResponse({    @JsonKey(name: 'TotalChallans') String? totalChallans,    @JsonKey(name: 'TotalAmount') String? totalAmount,    @JsonKey(name: 'PaidChallans') String? paidChallans ,    @JsonKey(name: 'PendingChallans') String? pendingChallans,    @JsonKey(name: 'PendingAmount') String? pendingAmount,    @JsonKey(name: 'ReceivedAmount') String? receivedAmount  }) = _DashBoardCountResponse;  factory DashBoardCountResponse.fromJson(Map<String, dynamic> json) =>      _$DashBoardCountResponseFromJson(json);}@Freezed()class WingDashboardResponse with _$WingDashboardResponse {  const factory WingDashboardResponse({    required bool status,   @JsonKey(name: 'statuscode')    int? statusCode,    required String? result,    required String? remarks,  @JsonKey(name: 'dashboardcounts')    List<WingDashboardCount?>? dashboardCounts,  }) = _WingDashboardResponse;  factory WingDashboardResponse.fromJson(Map<String, dynamic> json) => _$WingDashboardResponseFromJson(json);}@Freezed()class WingDashboardCount with _$WingDashboardCount {  const factory WingDashboardCount({    @JsonKey(name: 'WingID')   String? wingId,    @JsonKey(name: 'WingName')   String? wingName,    @JsonKey(name: 'TotalChallans')   String? totalChallans,    @JsonKey(name: 'TotalAmount')   String? totalAmount,    @JsonKey(name: 'PaidChallans')   String? paidChallans,    @JsonKey(name: 'ReceivedAmount')   String? receivedAmount,    @JsonKey(name: 'PendingChallans')   String? pendingChallans,    @JsonKey(name: 'PendingAmount')   String? pendingAmount,  }) = _WingDashboardCount;  factory WingDashboardCount.fromJson(Map<String, dynamic> json) => _$WingDashboardCountFromJson(json);}@Freezed()class ViolationDashboardResponse with _$ViolationDashboardResponse {  const factory ViolationDashboardResponse({    required bool status,    @JsonKey(name: 'statuscode')    int? statusCode,    required String? result,    required String? remarks,    @JsonKey(name: 'ViolationWiseList')    List<ViolationDashboardCount?>? violationDashboardCount,  }) = _ViolationDashboardResponse;  factory ViolationDashboardResponse.fromJson(Map<String, dynamic> json) => _$ViolationDashboardResponseFromJson(json);}@Freezed()class ViolationDashboardCount with _$ViolationDashboardCount {  const factory ViolationDashboardCount({    @JsonKey(name: 'ViolationID')   String? violationId,    @JsonKey(name: 'ViolationName')   String? violationName,    @JsonKey(name: 'TotalChallans')   String? totalChallans,    @JsonKey(name: 'TotalAmount')   String? totalAmount,  }) = _ViolationDashboardCount;  factory ViolationDashboardCount.fromJson(Map<String, dynamic> json) => _$ViolationDashboardCountFromJson(json);}